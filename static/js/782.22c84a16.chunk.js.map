{"version":3,"file":"static/js/782.22c84a16.chunk.js","mappings":"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","sources":["components/Hooks/hooks.js","components/ContactForm.jsx","components/Finder.jsx","components/ContactList.jsx","views/Contacts.jsx"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contactsSlise';\nimport { contactsOperations } from '../../redux/contacts/contactsOperations';\n\nexport const useContacts = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(state => state.contacts.filter);\n  const contacts = useSelector(state => state.contacts.items);\n  const isLoaging = useSelector(state => state.contacts.loader);\n  const error = useSelector(state => state.contacts.error);\n\n  const setFilter = value => {\n    dispatch(changeFilter(value));\n  };\n\n  const getContacts = () => {\n    dispatch(contactsOperations.getContacts());\n  };\n\n  const addContact = data => {\n    dispatch(contactsOperations.addContact(data));\n  };\n\n  const deleteContact = id => {\n    dispatch(contactsOperations.deleteContact(id));\n  };\n\n  return {\n    filter,\n    contacts,\n    isLoaging,\n    error,\n    setFilter,\n    getContacts,\n    addContact,\n    deleteContact,\n  };\n};\n","import s from '../Styles.module.css';\n// import * as s from '../Styles.module.css';\nimport { useState } from 'react';\nimport { useContacts } from './Hooks/hooks';\nimport { infoToast, successToast } from './Toasts';\n\nexport const ContacstForm = () => {\n  const { contacts, addContact } = useContacts();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n    console.log(name, value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const enterContacts = contacts.some(\n      contact =>\n        (contact.name === name.toLowerCase() && contact.number === number) ||\n        contact.number === number\n    );\n    enterContacts\n      ? infoToast(`${name} or ${number} is already in contacts`)\n      : addContact({ name, number });\n    !enterContacts && successToast('the contact is in the list  😃');\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={s.cont__container}>\n      <form className={s.form__container} onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"number number must be at least 5 digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n        <button type=\"submit \" className={s.form__btn}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n// import { useState } from 'react';\n// import { nanoid } from 'nanoid';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getContacts, addContact } from '../../redux/slice';\n\n// const ContactForm = () => {\n//   const [name, setName] = useState('');\n//   const [number, setNumber] = useState('');\n//   const contacts = useSelector(getContacts);\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = event => {\n//     event.preventDefault();\n//     const contact = {\n//       id: nanoid(),\n//       name,\n//       number,\n//     };\n//     const enterContacts = contacts.some(\n//       contact => contact.name.toLowerCase() === name.toLowerCase()\n\n//     );\n//     enterContacts\n//       ? alert(`${name}  is already exists`)\n//       : dispatch(addContact(contact));\n\n//     setName('');\n//     setNumber('');\n//   };\n\n//   const handleChange = event => {\n//     console.log(event.target.value, event.target.name);\n//     const { name, value } = event.target;\n//     switch (name) {\n//       case 'name':\n//         setName(value);\n//         break;\n//       case 'number':\n//         setNumber(value);\n//         break;\n//       default:\n//         break;\n//     }\n//   };\n\n//   return (\n//     <form\n//       style={{\n//         maxWidth: '250px',\n//         fontSize: 30,\n//       }}\n//       onSubmit={handleSubmit}\n//     >\n//       <label>\n//         Name\n//         <input\n//           style={{\n//             height: '34px',\n//             background: '#ccd6e3',\n//             borderRadius: '6px',\n//           }}\n//           type=\"text\"\n//           onChange={handleChange}\n//           name=\"name\"\n//           value={name}\n//           // pattern for input\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//           required\n//         />\n//       </label>\n\n//       <label>\n//         Number\n//         <input\n//           style={{\n//             height: '34px',\n//             background: '#ccd6e3',\n//             borderRadius: '6px',\n//           }}\n//           type=\"tel\"\n//           onChange={handleChange}\n//           name=\"number\"\n//           value={number}\n//           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//           required\n//         />\n//       </label>\n\n//       <button\n//         style={{\n//           boxSizing: 'border-box',\n//           width: '100px',\n//           height: '34px',\n//           background: '#808e9e',\n//           border: 'none',\n//           cursor: 'pointer',\n//           borderRadius: '6px',\n//           marginTop: '20px',\n//         }}\n//         type=\"submit\"\n//       >\n//         Add contact\n//       </button>\n//     </form>\n//   );\n// };\n\n// export default ContactForm;\n","import s from '../Styles.module.css';\nimport { useContacts } from './Hooks/hooks';\n\nexport const Filter = () => {\n  const { filter, setFilter } = useContacts();\n  return (\n    <div className={s.cont__container}>\n      <h2 className={s.home__title}>Filter contacts by name</h2>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"Find contact by name\"\n        onChange={e => setFilter(e.target.value)}\n      />\n    </div>\n  );\n};\n\n// import { useDispatch, useSelector } from 'react-redux';\n// import { setFilter, getFilter } from '../../redux/slice';\n// const Finder = () => {\n//   const dispatch = useDispatch();\n//   const filter = useSelector(getFilter);\n\n//   const onChange = event => {\n//     dispatch(setFilter(event.target.value));\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         display: 'flex',\n//         justifyContent: 'left',\n//         alignItems: 'center',\n//       }}\n//     >\n//       <label>Find contact by name</label>\n//       <input\n//         style={{\n//           height: '34px',\n//           background: '#ccd6e3',\n//           borderRadius: '6px',\n//           marginLeft: '10px',\n//         }}\n//         type=\"text\"\n//         value={filter}\n//         onChange={onChange}\n//       ></input>\n//     </div>\n//   );\n// };\n\n// export default Finder;\n","import s from '../Styles.module.css';\nimport { Loader } from '../components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useContacts } from './Hooks/hooks';\nimport { contactsOperations } from '../redux/contacts/contactsOperations';\nimport { deleteToast } from './Toasts';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nexport const ContactsList = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  const dispatch = useDispatch();\n  const { contacts, isLoaging, filter, deleteContact, setFilter } =\n    useContacts();\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n\n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    if (contacts) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  };\n\n  const filteredContacts = findContacts();\n\n  return (\n    <div>\n      {isLoaging && <Loader />}\n      {isLoggedIn && (\n        <ul className={s.items__container}>\n          {contacts &&\n            filteredContacts.map(({ id, name, number }) => {\n              return (\n                <li className={s.item} key={id}>\n                  <h3 className={s.item__name}>{name}:</h3>\n                  <p className={s.item__name}>{number}</p>\n                  <button\n                    className={s.user__btn}\n                    type=\"button\"\n                    onClick={() => {\n                      deleteContact(id);\n                      deleteToast(`${name} tel:${number} is deleted`);\n                      setFilter('');\n                    }}\n                  >\n                    Delete\n                  </button>\n                </li>\n              );\n            })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getContacts, getFilter, deleteContact } from '../../redux/slice';\n\n// const ContactList = () => {\n//   const dispatch = useDispatch();\n//   const contacts = useSelector(getContacts);\n//   const filter = useSelector(getFilter);\n\n//   const findContacts = () => {\n//     const normalizedFilter = filter.toLowerCase();\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter)\n//     );\n//   };\n\n//   const filteredContacts = findContacts();\n\n//   return (\n//     <ul>\n//       {filteredContacts.map(({ id, name, number }) => {\n//         console.log(name);\n//         return (\n//           <li key={id}>\n//             <p>\n//               {name}: {number}\n//             </p>\n//             <button\n//               style={{\n//                 boxSizing: 'border-box',\n//                 width: '100px',\n//                 height: '34px',\n//                 background: '#808e9e',\n//                 border: 'none',\n//                 cursor: 'pointer',\n//                 borderRadius: '6px',\n//                 marginTop: '20px',\n//               }}\n//               type=\"button\"\n//               onClick={() => dispatch(deleteContact(id))}\n//             >\n//               Delete\n//             </button>\n//           </li>\n//         );\n//       })}\n//     </ul>\n//   );\n// };\n\n// export default ContactList;\n","import { ContacstForm } from '../components/ContactForm';\nimport { Filter } from '../components/Finder';\nimport { ContactsList } from '../components/ContactList';\nimport s from '../Styles.module.css';\n\nconst Contacts = () => {\n  return (\n    <div className={s.view__container}>\n      <h2 className={s.home__title}>\n        Enter a name and phone number to add a contact\n      </h2>\n      <ContacstForm />\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["useContacts","dispatch","useDispatch","filter","useSelector","state","contacts","items","isLoaging","loader","error","setFilter","value","changeFilter","getContacts","contactsOperations","addContact","data","deleteContact","id","ContacstForm","useState","name","setName","number","setNumber","handleChange","event","target","console","log","handleSubmit","preventDefault","enterContacts","some","contact","toLowerCase","infoToast","successToast","className","s","onSubmit","type","placeholder","pattern","title","required","onChange","Filter","e","ContactsList","isLoggedIn","authSelectors","useEffect","filteredContacts","normalizedFilter","includes","findContacts","Loader","map","onClick","deleteToast"],"sourceRoot":""}